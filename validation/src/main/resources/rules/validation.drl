//created on: Oct 24, 2014
package com.github.ligangty.droolstest.bank.validation

//list any import classes here.
import org.kie.api.runtime.rule.RuleContext;

import java.util.List;

import com.github.ligangty.droolstest.bank.model.*;
import com.github.ligangty.droolstest.bank.service.*;
import com.github.ligangty.droolstest.bank.util.*;

//import functions here
import function com.github.ligangty.droolstest.bank.service.ValidationHelper.error;
import function com.github.ligangty.droolstest.bank.service.ValidationHelper.warning;
import function com.github.ligangty.droolstest.bank.service.ValidationHelper.yearsPassedSince;

//declare any global variables here
global ValidationReport validationReport;
global ReportFactory reportFactory;
global BankingInquiryService inquiryService;

//rules
rule "addressRequired"
    when
        Customer( address == null );
    then
        warning(kcontext);
end

rule "phoneNumberRequired"
    when 
    	Customer( phoneNumber==null||=="" )
    then 
    	error(kcontext);
end

rule "accountOwnerRequired"
    when 
        $account : Account( owner==null )
    then 
        error(kcontext, $account);
end

rule "accountBalanceAtLeast"
    when
    	$account : Account( balance < 100 )
    then 
    	warning(kcontext, $account);
end 

rule "studentAccountCustomerAgeLessThan"
    when 
       Customer( eval(yearsPassedSince(dateOfBirth) >= 27) )
       $account : Account( type == Account.Type.STUDENT)
    then 
       error(kcontext, $account);
end

rule "accountNumberUnique"
    when 
    	$account : Account ( eval( !inquiryService.isAccountNumberUnique($account) ) )
    then
        error(kcontext, $account);
end
